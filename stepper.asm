.origin 0
.entrypoint START

#define CONST_PRUCFG C4

#define GPIO0   0x44E07000
#define GPIO1	0x4804C000 
#define GPIO2	0x481AC000 

#define GPIO_DATAIN		0x138
#define GPIO_CLEARDATAOUT	0x190
#define GPIO_SETDATAOUT		0x194

#define CONST_PRUDRAM C24
#define CTBIR_1 0x22024

.macro WRITERAM
.mparam addr, gpio
        MOV r1, gpio
        SBCO r1, CONST_PRUDRAM, addr, 4
        ADD addr, addr, 4
.endm

.macro WAIT
.mparam reg, clicks
	MOV reg, clicks
	LOOP1:
		SUB reg, reg, 1
		QBNE LOOP1, reg, 0
	ADD reg, reg, 1
.endm

START:
	//Enables OCP (Open Core Protocol) between PRU and am33xx
	LBCO r0, CONST_PRUCFG, 4, 4
	CLR r0, r0, 4
	SBCO r0, CONST_PRUCFG, 4, 4

	//Configure the block index register
	MOV r0, 0x00000000
	MOV r1, CTBIR_1
	SBBO r0, r1, #0x00, 4

	//Load GPIO/PRU addresses into RAM
        MOV r0, 28
	//Motor STEP
	WRITERAM r0, 0b00000000000001	//28
	WRITERAM r0, 0b00000000000010
	WRITERAM r0, 0b00000000000100
	WRITERAM r0, 0b00000000001000
	WRITERAM r0, 0b00000000010000
	WRITERAM r0, 0b00000000100000
	WRITERAM r0, 0b00000001000000
	WRITERAM r0, 0b00000010000000
	WRITERAM r0, 0b00000100000000
	WRITERAM r0, 0b00001000000000
	WRITERAM r0, 0b00100000000000
	WRITERAM r0, 0b01000000000000
	//Motor DIR
	WRITERAM r0, 0b0000000000000001 //76
	WRITERAM r0, 0b0000000000000010
	WRITERAM r0, 0b0000000000000100
	WRITERAM r0, 0b0000000000001000
	WRITERAM r0, 0b0000000000010000
	WRITERAM r0, 0b0000000000100000
	WRITERAM r0, 0b0000000001000000
	WRITERAM r0, 0b0000000010000000
	WRITERAM r0, 0b0001000000000000
	WRITERAM r0, 0b0010000000000000
	WRITERAM r0, 0b0100000000000000
	WRITERAM r0, 0b1000000000000000
	//Control Valve
	WRITERAM r0, 0b000000000000010 //124
	WRITERAM r0, 0b000000000000100
	WRITERAM r0, 0b000000000001000
	WRITERAM r0, 0b000000000010000
	WRITERAM r0, 0b000000000100000
	WRITERAM r0, 0b100000000000000
	//Home Switch
	WRITERAM r0, 0b000000000000000000000100000000 //148
	WRITERAM r0, 0b000000000000000000001000000000
	WRITERAM r0, 0b000000000000000000010000000000
	WRITERAM r0, 0b000000000000000000100000000000
	WRITERAM r0, 0b000000010000000000000000000000
	WRITERAM r0, 0b000000100000000000000000000000
	WRITERAM r0, 0b000000000000010000000000000000
	WRITERAM r0, 0b000000000000100000000000000000
	WRITERAM r0, 0b000000000001000000000000000000
	WRITERAM r0, 0b000000000010000000000000000000
	WRITERAM r0, 0b010000000000000000000000000000
	WRITERAM r0, 0b100000000000000000000000000000

	//Step Positions
	WRITERAM r0, 0 //196
	WRITERAM r0, 0
	WRITERAM r0, 0
	WRITERAM r0, 0
	WRITERAM r0, 0
	WRITERAM r0, 0

LOOP1:
	//Get desired step position of motor pair 1
	LBCO r1, CONST_PRUDRAM, 0, 4

	//If the motor pair is already where it needs to be, loop until it isn't
        LBCO r0, CONST_PRUDRAM, 196, 4 //Step Position
	QBEQ LOOP1, r0, r1

	//Get the desired control valve direction
	LBCO r2, CONST_PRUDRAM, 24, 4
	AND r2, r2, 1 << 0

	//Set the control valve direction
	QBEQ CLRDATA, r2, 0
	MOV r4, GPIO2 | GPIO_SETDATAOUT
	JMP SETGPIO
CLRDATA:
	MOV r4, GPIO2 | GPIO_CLEARDATAOUT
SETGPIO:
        LBCO r3, CONST_PRUDRAM, 124, 4 //Control Valve
	SBBO r3, r4, 0, 4

	//Set the motor direction
	QBLT DIRUP, r0, r1
	MOV r2, GPIO1 | GPIO_CLEARDATAOUT
	ADD r0, r0, 1
	JMP SETDIR
DIRUP:
	MOV r2, GPIO1 | GPIO_SETDATAOUT
	SUB r0, r0, 1
SETDIR:
        SBCO r0, CONST_PRUDRAM, 196, 4 //Step Position
        LBCO r1, CONST_PRUDRAM, 76, 4 //Motor DIR
	SBBO r1, r2, 0, 4

	//Move the motor pair one step by toggling their STEP pin
        LBCO r1, CONST_PRUDRAM, 28, 4 //Motor STEP
	XOR r30, r30, r1

	//Wait an arbitrary amount of time between steps
	WAIT r1, 50000
	JMP LOOP1

HALT

